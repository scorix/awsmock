// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go-v2/feature/s3/manager (interfaces: ListObjectsV2APIClient)

// Package s3mock is a generated GoMock package.
package s3mock

import (
	context "context"
	reflect "reflect"

	s3 "github.com/aws/aws-sdk-go-v2/service/s3"
	gomock "github.com/golang/mock/gomock"
)

// MockListObjectsV2APIClient is a mock of ListObjectsV2APIClient interface.
type MockListObjectsV2APIClient struct {
	ctrl     *gomock.Controller
	recorder *MockListObjectsV2APIClientMockRecorder
}

// MockListObjectsV2APIClientMockRecorder is the mock recorder for MockListObjectsV2APIClient.
type MockListObjectsV2APIClientMockRecorder struct {
	mock *MockListObjectsV2APIClient
}

// NewMockListObjectsV2APIClient creates a new mock instance.
func NewMockListObjectsV2APIClient(ctrl *gomock.Controller) *MockListObjectsV2APIClient {
	mock := &MockListObjectsV2APIClient{ctrl: ctrl}
	mock.recorder = &MockListObjectsV2APIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockListObjectsV2APIClient) EXPECT() *MockListObjectsV2APIClientMockRecorder {
	return m.recorder
}

// ListObjectsV2 mocks base method.
func (m *MockListObjectsV2APIClient) ListObjectsV2(arg0 context.Context, arg1 *s3.ListObjectsV2Input, arg2 ...func(*s3.Options)) (*s3.ListObjectsV2Output, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListObjectsV2", varargs...)
	ret0, _ := ret[0].(*s3.ListObjectsV2Output)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListObjectsV2 indicates an expected call of ListObjectsV2.
func (mr *MockListObjectsV2APIClientMockRecorder) ListObjectsV2(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListObjectsV2", reflect.TypeOf((*MockListObjectsV2APIClient)(nil).ListObjectsV2), varargs...)
}
