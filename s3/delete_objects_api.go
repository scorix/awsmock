// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go-v2/feature/s3/manager (interfaces: DeleteObjectsAPIClient)

// Package s3mock is a generated GoMock package.
package s3mock

import (
	context "context"
	reflect "reflect"

	s3 "github.com/aws/aws-sdk-go-v2/service/s3"
	gomock "github.com/golang/mock/gomock"
)

// MockDeleteObjectsAPIClient is a mock of DeleteObjectsAPIClient interface.
type MockDeleteObjectsAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteObjectsAPIClientMockRecorder
}

// MockDeleteObjectsAPIClientMockRecorder is the mock recorder for MockDeleteObjectsAPIClient.
type MockDeleteObjectsAPIClientMockRecorder struct {
	mock *MockDeleteObjectsAPIClient
}

// NewMockDeleteObjectsAPIClient creates a new mock instance.
func NewMockDeleteObjectsAPIClient(ctrl *gomock.Controller) *MockDeleteObjectsAPIClient {
	mock := &MockDeleteObjectsAPIClient{ctrl: ctrl}
	mock.recorder = &MockDeleteObjectsAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteObjectsAPIClient) EXPECT() *MockDeleteObjectsAPIClientMockRecorder {
	return m.recorder
}

// DeleteObjects mocks base method.
func (m *MockDeleteObjectsAPIClient) DeleteObjects(arg0 context.Context, arg1 *s3.DeleteObjectsInput, arg2 ...func(*s3.Options)) (*s3.DeleteObjectsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteObjects", varargs...)
	ret0, _ := ret[0].(*s3.DeleteObjectsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteObjects indicates an expected call of DeleteObjects.
func (mr *MockDeleteObjectsAPIClientMockRecorder) DeleteObjects(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteObjects", reflect.TypeOf((*MockDeleteObjectsAPIClient)(nil).DeleteObjects), varargs...)
}
